{
  "extends": "./tsconfig.json",
  "compilerOptions": {
    // Importante: outDir é relativo ao local do tsconfig.json, ou absoluto.
    // Para que as funções fiquem em `netlify/functions-dist` como esperado pelo netlify.toml
    "outDir": "./netlify/functions-dist",
    // rootDir instrui o tsc sobre a "raiz" dos seus arquivos fonte.
    // A estrutura de diretórios sob rootDir será replicada em outDir.
    "rootDir": "./netlify/functions",
    "module": "ESNext", // Mantido ESNext, Netlify Functions suporta.
    "target": "ESNext",
    "moduleResolution": "node", // ou "NodeNext" se estiver usando apenas ES Modules
    "esModuleInterop": true,
    "skipLibCheck": true,
    "forceConsistentCasingInFileNames": true,
    // "isolatedModules": true, // Pode ser true se todos os arquivos forem módulos ES.
    "resolveJsonModule": true,
    "sourceMap": true,
    "types": ["node"]
    // baseUrl e paths não são estritamente necessários com a estratégia de cópia de arquivos.
  },
  "include": [
    // Inclui todos os arquivos .ts dentro do rootDir (netlify/functions)
    // Isso pegará api.ts e o diretório database/* (após a cópia)
    "**/*.ts"
  ],
  "exclude": [
    "node_modules",
    // Não precisamos excluir "dist" ou "client" aqui porque o rootDir já os escopa.
    // Excluir o próprio outDir para evitar problemas de compilação recursiva.
    "../functions-dist" // Relativo ao rootDir "netlify/functions"
  ]
}
